@using CleanArchitecture.Domain.Documents
@model Document

@{
    ViewData["Title"] = "Detail";
}

<h1>Detail</h1>

<div>
    <div class="d-flex justify-content-between">
        <h4>Document</h4>
        <div>
            @if ((User.IsInRole("Document.Creator") || User.IsInRole("Admin")) && Model.Status == DocumentStatus.Draft)
            {
                @Html.ActionLink("Submit", "Submit", new { id = Model.Id}, new {@class = "btn btn-primary"})
            }
            @if ((User.IsInRole("Document.Crosschecker") || User.IsInRole("Admin")) && Model.Status == DocumentStatus.Submitted)
            {
                var cssClass = "btn btn-primary";
                var tooltip = "Click to accept the content";
                if (!User.IsInRole("Admin") && Model.Submitter == User?.Identity?.Name)
                {
                    cssClass = "btn btn-primary disabled";
                    tooltip = "Cross checker should differ from submitter";
                }
                <span title="@tooltip" , data-toggle="tooltip" , data-placement="top">
                    @Html.ActionLink("Accept", "AcceptCrossCheck", new { id = Model.Id}, new {@class=cssClass})
                </span>
            }
            @if ((User.IsInRole("Document.Approver") || User.IsInRole("Admin")) && Model.Status == DocumentStatus.CrossChecked)
            {
                <span title="Click to approve the content" , data-toggle="tooltip" , data-placement="top">
                    @Html.ActionLink("Approve", "Approve", new { id = Model.Id}, new {@class="btn btn-primary"})
                </span>
            }
            @if (Model.Status == DocumentStatus.Approved || Model.Status == DocumentStatus.Published)
            {
                <span class="badge bg-success">@Html.DisplayFor(model => model.Status)</span>
            }
            else
            {
                <span class="badge bg-warning">@Html.DisplayFor(model => model.Status)</span>
            }
        </div>
    </div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DocumentName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DocumentName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BlobUri)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BlobUri)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BlobName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BlobName)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id=Model.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
